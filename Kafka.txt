Kafka : https://www.tutorialspoint.com/apache_kafka/apache_kafka_introduction.htm
		Apache Kafka is a distributed publish-subscribe messaging system and a robust queue that can handle a high volume of data and enables you
		to pass messages from one end-point to another. Kafka is suitable for both offline and online message consumption. Kafka messages are 
		persisted on the disk and replicated within the cluster to prevent data loss. Kafka is built on top of the ZooKeeper synchronization service.
		It integrates very well with Apache Storm and Spark for real-time streaming data analysis.

Advantage	:
		Reliability − Kafka is distributed, partitioned, replicated and fault tolerance.

		Scalability − Kafka messaging system scales easily without down time..

		Durability − Kafka uses Distributed commit log which means messages persists on disk as fast as possible, hence it is durable..

		Performance − Kafka has high throughput for both publishing and subscribing messages. It maintains stable performance even many TB of 
		messages are stored.
		
Usecase	:	
		Metrics − Kafka is often used for operational monitoring data. This involves aggregating statistics from distributed applications to produce centralized feeds of operational data.

		Log Aggregation Solution − Kafka can be used across an organization to collect logs from multiple services and make them available in a 
		standard format to multiple con-sumers.

		Stream Processing − Popular frameworks such as Storm and Spark Streaming read data from a topic, processes it, and write processed data to 
		a new topic where it becomes available for users and applications. Kafka’s strong durability is also very useful in the context of stream 
		processing.
		
Need for Kafka	:
		Kafka is a unified platform for handling all the real-time data feeds. Kafka supports low latency message delivery and gives guarantee
		for fault tolerance in the presence of machine failures. It has the ability to handle a large number of diverse consumers. Kafka is very
		fast, performs 2 million writes/sec. Kafka persists all data to the disk, which essentially means that all the writes go to the page cache
		of the OS (RAM). This makes it very efficient to transfer data from page cache to a network socket.
		
ZooKeeper

ZooKeeper	:	
		IT is used for managing and coordinating Kafka broker. ZooKeeper service is mainly used to notify producer and consumer about the
		presence of any new broker in the Kafka system or failure of the broker in the Kafka system. As per the notification received by the 
		Zookeeper regarding presence or failure of the broker then pro-ducer and consumer takes decision and starts coordinating their task with
		some other broker.